import React, { useState } from 'react';
import { IoHelpCircle, IoChevronDown, IoChevronUp, IoSearch, IoMail, IoCall, IoChatbubble } from 'react-icons/io5';
import './Help.css';

export default function Help() {
  const [searchTerm, setSearchTerm] = useState('');
  const [expandedFaqs, setExpandedFaqs] = useState(new Set());

  const faqs = [
    {
      id: 1,
      question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t h√†ng?",
      answer: "ƒê·ªÉ ƒë·∫∑t h√†ng, b·∫°n c·∫ßn: 1) Ch·ªçn s·∫£n ph·∫©m y√™u th√≠ch, 2) Ch·ªçn size v√† m√†u s·∫Øc, 3) Th√™m v√†o gi·ªè h√†ng, 4) ƒêi·ªÅn th√¥ng tin giao h√†ng, 5) Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n v√† ho√†n t·∫•t ƒë∆°n h√†ng."
    },
    {
      id: 2,
      question: "Th·ªùi gian giao h√†ng l√† bao l√¢u?",
      answer: "Th·ªùi gian giao h√†ng th∆∞·ªùng t·ª´ 3-5 ng√†y l√†m vi·ªác ƒë·ªëi v·ªõi c√°c t·ªânh th√†nh l·ªõn, v√† 5-7 ng√†y ƒë·ªëi v·ªõi c√°c v√πng xa. Ch√∫ng t√¥i s·∫Ω g·ª≠i email x√°c nh·∫≠n khi ƒë∆°n h√†ng ƒë∆∞·ª£c giao."
    },
    {
      id: 3,
      question: "C√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m kh√¥ng?",
      answer: "C√≥, ch√∫ng t√¥i ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ trong v√≤ng 30 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng. S·∫£n ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, ch∆∞a s·ª≠ d·ª•ng v√† c√≥ ƒë·∫ßy ƒë·ªß ph·ª• ki·ªán ƒëi k√®m."
    },
    {
      id: 4,
      question: "C√°c ph∆∞∆°ng th·ª©c thanh to√°n n√†o ƒë∆∞·ª£c ch·∫•p nh·∫≠n?",
      answer: "Ch√∫ng t√¥i ch·∫•p nh·∫≠n: 1) Thanh to√°n khi nh·∫≠n h√†ng (COD), 2) Chuy·ªÉn kho·∫£n ng√¢n h√†ng, 3) Thanh to√°n qua VNPay, 4) Thanh to√°n qua Momo."
    },
    {
      id: 5,
      question: "L√†m sao ƒë·ªÉ theo d√µi ƒë∆°n h√†ng?",
      answer: "B·∫°n c√≥ th·ªÉ theo d√µi ƒë∆°n h√†ng b·∫±ng c√°ch: 1) V√†o trang 'Order Tracker', 2) Nh·∫≠p m√£ ƒë∆°n h√†ng, 3) Xem tr·∫°ng th√°i c·∫≠p nh·∫≠t real-time, 4) Nh·∫≠n th√¥ng b√°o qua email."
    },
    {
      id: 6,
      question: "Size gi√†y c√≥ ch√≠nh x√°c kh√¥ng?",
      answer: "Ch√∫ng t√¥i cung c·∫•p b·∫£ng size chi ti·∫øt cho t·ª´ng lo·∫°i gi√†y. B·∫°n n√™n ƒëo ch√¢n tr∆∞·ªõc khi ch·ªçn size ƒë·ªÉ ƒë·∫£m b·∫£o v·ª´a v·∫∑n. N·∫øu kh√¥ng v·ª´a, ch√∫ng t√¥i h·ªó tr·ª£ ƒë·ªïi size mi·ªÖn ph√≠."
    },
    {
      id: 7,
      question: "C√≥ ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i n√†o kh√¥ng?",
      answer: "C√≥, ch√∫ng t√¥i th∆∞·ªùng xuy√™n c√≥ c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i: 1) Gi·∫£m gi√° theo m√πa, 2) Mua 2 t·∫∑ng 1, 3) Gi·∫£m gi√° cho kh√°ch h√†ng m·ªõi, 4) ∆Øu ƒë√£i ƒë·∫∑c bi·ªát cho th√†nh vi√™n VIP."
    },
    {
      id: 8,
      question: "L√†m sao ƒë·ªÉ li√™n h·ªá h·ªó tr·ª£ kh√°ch h√†ng?",
      answer: "B·∫°n c√≥ th·ªÉ li√™n h·ªá ch√∫ng t√¥i qua: 1) Hotline: 1900-xxxx, 2) Email: support@uthshoes.com, 3) Chat tr·ª±c tuy·∫øn tr√™n website, 4) Fanpage Facebook."
    }
  ];

  const toggleFaq = (faqId) => {
    const newExpanded = new Set(expandedFaqs);
    if (newExpanded.has(faqId)) {
      newExpanded.delete(faqId);
    } else {
      newExpanded.add(faqId);
    }
    setExpandedFaqs(newExpanded);
  };

  const filteredFaqs = faqs.filter(faq =>
    faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
    faq.answer.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const popularCategories = [
    { name: "ƒê·∫∑t h√†ng & Thanh to√°n", icon: "üõí", count: 4 },
    { name: "Giao h√†ng & V·∫≠n chuy·ªÉn", icon: "üöö", count: 3 },
    { name: "ƒê·ªïi tr·∫£ & B·∫£o h√†nh", icon: "üîÑ", count: 2 },
    { name: "T√†i kho·∫£n & B·∫£o m·∫≠t", icon: "üîí", count: 2 }
  ];

  return (
    <div className="help-container">
      {/* Header */}
      <div className="help-header">
        <div className="help-header-content">
          <div className="help-icon">
            <IoHelpCircle size={60} />
          </div>
          <h1>Trung t√¢m tr·ª£ gi√∫p</h1>
          <p>Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n 24/7</p>
        </div>
      </div>

      {/* Search Section */}
      <div className="search-section">
        <div className="search-container">
          <IoSearch className="search-icon" />
          <input
            type="text"
            placeholder="T√¨m ki·∫øm c√¢u h·ªèi th∆∞·ªùng g·∫∑p..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
        </div>
      </div>

      {/* Popular Categories */}
      <div className="categories-section">
        <h2>Danh m·ª•c ph·ªï bi·∫øn</h2>
        <div className="categories-grid">
          {popularCategories.map((category, index) => (
            <div key={index} className="category-card">
              <div className="category-icon">{category.icon}</div>
              <h3>{category.name}</h3>
              <p>{category.count} c√¢u h·ªèi</p>
            </div>
          ))}
        </div>
      </div>

      {/* FAQs Section */}
      <div className="faqs-section">
        <h2>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
        <div className="faqs-container">
          {filteredFaqs.map((faq) => (
            <div key={faq.id} className="faq-item">
              <button
                className="faq-question"
                onClick={() => toggleFaq(faq.id)}
              >
                <span>{faq.question}</span>
                {expandedFaqs.has(faq.id) ? (
                  <IoChevronUp size={20} />
                ) : (
                  <IoChevronDown size={20} />
                )}
              </button>
              {expandedFaqs.has(faq.id) && (
                <div className="faq-answer">
                  <p>{faq.answer}</p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* Contact Section */}
      <div className="contact-section">
        <h2>V·∫´n c·∫ßn h·ªó tr·ª£?</h2>
        <p>ƒê·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi√∫p ƒë·ª° b·∫°n</p>
        <div className="contact-methods">
          <div className="contact-method">
            <IoCall className="contact-icon" />
            <h3>G·ªçi ƒëi·ªán</h3>
            <p>1900-xxxx</p>
            <span>24/7</span>
          </div>
          <div className="contact-method">
            <IoMail className="contact-icon" />
            <h3>Email</h3>
            <p>support@uthshoes.com</p>
            <span>Ph·∫£n h·ªìi trong 2h</span>
          </div>
          <div className="contact-method">
            <IoChatbubble className="contact-icon" />
            <h3>Chat tr·ª±c tuy·∫øn</h3>
            <p>B·∫Øt ƒë·∫ßu chat</p>
            <span>Ngay l·∫≠p t·ª©c</span>
          </div>
        </div>
      </div>
    </div>
  );
}

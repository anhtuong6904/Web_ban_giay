import React, { useState } from "react";
import "./ManageOrders.css";

const ordersData = [
  { id: 1, customer: "Nguy·ªÖn VƒÉn A", date: "2023-10-01", total: 1500000, status: "Ch·ªù x·ª≠ l√Ω" },
  { id: 2, customer: "Tr·∫ßn Th·ªã B", date: "2023-10-02", total: 2000000, status: "ƒêang giao" },
  { id: 3, customer: "L√™ VƒÉn C", date: "2023-10-03", total: 1200000, status: "Ho√†n t·∫•t" },
  { id: 4, customer: "Ph·∫°m Th·ªã D", date: "2023-10-04", total: 1800000, status: "H·ªßy" },
];

export default function ManageOrders() {
  const [filter, setFilter] = useState("T·∫•t c·∫£");
  const [orders, setOrders] = useState(ordersData);
  const [selectedOrder, setSelectedOrder] = useState(null);

  const handleStatusChange = (id, newStatus) => {
    setOrders((prev) =>
      prev.map((order) =>
        order.id === id ? { ...order, status: newStatus } : order
      )
    );
  };

  const filteredOrders =
    filter === "T·∫•t c·∫£"
      ? orders
      : orders.filter((order) => order.status === filter);

  return (
    <div className="orders-page">
      <h1>üì¶ Qu·∫£n l√Ω ƒë∆°n h√†ng</h1>

      {/* B·ªô l·ªçc */}
      <div className="filter-container">
        <label>L·ªçc theo tr·∫°ng th√°i:</label>
        <select value={filter} onChange={(e) => setFilter(e.target.value)}>
          <option>T·∫•t c·∫£</option>
          <option>Ch·ªù x·ª≠ l√Ω</option>
          <option>ƒêang giao</option>
          <option>Ho√†n t·∫•t</option>
          <option>H·ªßy</option>
        </select>
      </div>

      {/* B·∫£ng ƒë∆°n h√†ng */}
      <table className="orders-table">
        <thead>
          <tr>
            <th>M√£ ƒë∆°n</th>
            <th>Kh√°ch h√†ng</th>
            <th>Ng√†y ƒë·∫∑t</th>
            <th>T·ªïng ti·ªÅn</th>
            <th>Tr·∫°ng th√°i</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {filteredOrders.map((order) => (
            <tr key={order.id}>
              <td>{order.id}</td>
              <td>{order.customer}</td>
              <td>{order.date}</td>
              <td>{order.total.toLocaleString()} ‚Ç´</td>
              <td>
                <span className={`status ${order.status.replace(" ", "-")}`}>
                  {order.status}
                </span>
              </td>
              <td>
                <select
                  value={order.status}
                  onChange={(e) => handleStatusChange(order.id, e.target.value)}
                >
                  <option>Ch·ªù x·ª≠ l√Ω</option>
                  <option>ƒêang giao</option>
                  <option>Ho√†n t·∫•t</option>
                  <option>H·ªßy</option>
                </select>
                <button className="btn-detail" onClick={() => setSelectedOrder(order)}>
                  Chi ti·∫øt
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Modal chi ti·∫øt */}
      {selectedOrder && (
        <div className="modal">
          <div className="modal-content">
            <h2>Chi ti·∫øt ƒë∆°n h√†ng #{selectedOrder.id}</h2>
            <p><strong>Kh√°ch h√†ng:</strong> {selectedOrder.customer}</p>
            <p><strong>Ng√†y ƒë·∫∑t:</strong> {selectedOrder.date}</p>
            <p><strong>T·ªïng ti·ªÅn:</strong> {selectedOrder.total.toLocaleString()} ‚Ç´</p>
            <p><strong>Tr·∫°ng th√°i:</strong> {selectedOrder.status}</p>
            <button className="btn-close" onClick={() => setSelectedOrder(null)}>ƒê√≥ng</button>
          </div>
        </div>
      )}
    </div>
  );
}

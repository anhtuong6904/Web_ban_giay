import React, { useState } from "react";
import "./ManageProducts.css";

export default function ManageProducts() {
  const [products, setProducts] = useState([
    { id: 1, name: "Nike Air Max", price: 2500000, stock: 10, description: "Gi√†y ch·∫°y b·ªô nh·∫π, tho·∫£i m√°i." },
    { id: 2, name: "Adidas Ultraboost", price: 3200000, stock: 5, description: "Gi√†y th·ªÉ thao cao c·∫•p, h·ªó tr·ª£ t·ªët." },
  ]);

  const [formData, setFormData] = useState({ name: "", price: "", stock: "", description: "" });
  const [editingId, setEditingId] = useState(null);
  const [showModal, setShowModal] = useState(false);

  // M·ªü popup (th√™m ho·∫∑c s·ª≠a)
  const openModal = (product = null) => {
    if (product) {
      setFormData(product);
      setEditingId(product.id);
    } else {
      setFormData({ name: "", price: "", stock: "", description: "" });
      setEditingId(null);
    }
    setShowModal(true);
  };

  // ƒê√≥ng popup
  const closeModal = () => {
    setShowModal(false);
    setEditingId(null);
  };

  // L∆∞u d·ªØ li·ªáu
  const handleSave = () => {
    if (!formData.name || !formData.price || !formData.stock || !formData.description) {
      return alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
    }

    if (editingId) {
      // c·∫≠p nh·∫≠t
      setProducts(products.map((p) => (p.id === editingId ? { ...formData, id: editingId } : p)));
    } else {
      // th√™m m·ªõi
      setProducts([...products, { id: Date.now(), ...formData, price: Number(formData.price), stock: Number(formData.stock) }]);
    }

    closeModal();
  };

  // X√≥a
  const handleDelete = (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?")) {
      setProducts(products.filter((p) => p.id !== id));
    }
  };

  return (
    <div className="products-page">
      <h1>Qu·∫£n l√Ω h√†ng h√≥a</h1>
      <button className="btn-add" onClick={() => openModal()}>‚ûï Th√™m s·∫£n ph·∫©m</button>

      {/* B·∫£ng s·∫£n ph·∫©m */}
      <table className="products-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>T√™n</th>
            <th>Gi√°</th>
            <th>T·ªìn kho</th>
            <th>M√¥ t·∫£</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {products.map((p) => (
            <tr key={p.id}>
              <td>{p.id}</td>
              <td>{p.name}</td>
              <td>{p.price.toLocaleString()} ƒë</td>
              <td>{p.stock}</td>
              <td>{p.description}</td>
              <td>
                <button className="btn-edit" onClick={() => openModal(p)}>‚úèÔ∏è S·ª≠a</button>
                <button className="btn-delete" onClick={() => handleDelete(p.id)}>üóëÔ∏è X√≥a</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Popup modal */}
      {showModal && (
        <div className="modal-overlay">
          <div className="modal">
            <h2>{editingId ? "Ch·ªânh s·ª≠a s·∫£n ph·∫©m" : "Th√™m s·∫£n ph·∫©m m·ªõi"}</h2>
            <input
              type="text"
              placeholder="T√™n s·∫£n ph·∫©m"
              value={formData.name}
              onChange={(e) => setFormData({ ...formData, name: e.target.value })}
            />
            <input
              type="number"
              placeholder="Gi√°"
              value={formData.price}
              onChange={(e) => setFormData({ ...formData, price: e.target.value })}
            />
            <input
              type="number"
              placeholder="S·ªë l∆∞·ª£ng"
              value={formData.stock}
              onChange={(e) => setFormData({ ...formData, stock: e.target.value })}
            />
            <textarea
              placeholder="M√¥ t·∫£ s·∫£n ph·∫©m"
              value={formData.description}
              onChange={(e) => setFormData({ ...formData, description: e.target.value })}
            />
            <div className="modal-actions">
              <button className="btn-save" onClick={handleSave}>üíæ L∆∞u</button>
              <button className="btn-cancel" onClick={closeModal}>‚ùå H·ªßy</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

const sql = require('mssql');

// Th·ª≠ c√°c c·∫•u h√¨nh kh√°c nhau
const configs = [
  {
    name: 'localhost',
    config: {
      user: 'sa',
      password: 'Giakiet@123',
      server: 'localhost',
      database: 'WebShoes',
      options: {
        encrypt: false,
        trustServerCertificate: true,
        enableArithAbort: true
      }
    }
  },
  {
    name: 'localhost\\MSSQLSERVER',
    config: {
      user: 'sa',
      password: 'Giakiet@123',
      server: 'localhost\\MSSQLSERVER',
      database: 'WebShoes',
      options: {
        encrypt: false,
        trustServerCertificate: true,
        enableArithAbort: true
      }
    }
  },
  {
    name: 'DESKTOP-3UR600M',
    config: {
      user: 'sa',
      password: 'Giakiet@123',
      server: 'DESKTOP-3UR600M',
      database: 'WebShoes',
      options: {
        encrypt: false,
        trustServerCertificate: true,
        enableArithAbort: true
      }
    }
  },
  {
    name: 'DESKTOP-3UR600M\\MSSQLSERVER',
    config: {
      user: 'sa',
      password: 'Giakiet@123',
      server: 'DESKTOP-3UR600M\\MSSQLSERVER',
      database: 'shopgiay',
      options: {
        encrypt: false,
        trustServerCertificate: true,
        enableArithAbort: true
      }
    }
  }
];

async function testConnection(config, configName) {
  try {
    console.log(`üîå ƒêang th·ª≠ k·∫øt n·ªëi v·ªõi: ${configName}`);
    const pool = await sql.connect(config);
    console.log(`‚úÖ K·∫øt n·ªëi th√†nh c√¥ng v·ªõi: ${configName}`);
    
    // Test query ƒë∆°n gi·∫£n
    console.log('üîç ƒêang test query...');
    const result = await pool.request().query('SELECT COUNT(*) as total FROM Products');
    console.log('‚úÖ Query th√†nh c√¥ng! S·ªë s·∫£n ph·∫©m:', result.recordset[0].total);
    
    await pool.close();
    console.log('üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi database');
    return true;
    
  } catch (err) {
    console.error(`‚ùå L·ªói k·∫øt n·ªëi v·ªõi ${configName}:`, err.message);
    return false;
  }
}

async function testAllConfigs() {
  console.log('üöÄ B·∫Øt ƒë·∫ßu test t·∫•t c·∫£ c·∫•u h√¨nh...\n');
  
  for (const configInfo of configs) {
    const success = await testConnection(configInfo.config, configInfo.name);
    if (success) {
      console.log(`\nüéâ T√¨m th·∫•y c·∫•u h√¨nh ho·∫°t ƒë·ªông: ${configInfo.name}`);
      console.log('üìù C·∫≠p nh·∫≠t server.js v·ªõi c·∫•u h√¨nh n√†y:');
      console.log(`server: '${configInfo.config.server}'`);
      break;
    }
    console.log(''); // D√≤ng tr·ªëng ƒë·ªÉ d·ªÖ ƒë·ªçc
  }
}

testAllConfigs();
